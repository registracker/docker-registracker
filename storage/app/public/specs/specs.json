{
    "openapi": "3.0.3",
    "info": {
        "title": "Registracker",
        "version": "1.0.0"
    },
    "security": [
        {
            "BearerAuth": []
        }
    ],
    "paths": {
        "/api/sanctum/token": {
            "post": {
                "security": [],
                "tags": [
                    "Login"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "in": "query",
                        "name": "email",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "password",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "token": "65|WlVU0rbcESCiRtYfo5mdIxbmx4bVzhr79MAcuwLY4"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Las credenciales proporcionadas son incorrectas.",
                                    "errors": {
                                      "email": [
                                        "Las credenciales proporcionadas son incorrectas."
                                      ]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/departamentos": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "municipios"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Departamento"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/DepartamentoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Create departamento",
                "tags": [
                    "Departamento"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "municipios"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DepartamentoResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get a list of departamentos",
                "tags": [
                    "Departamento"
                ]
            }
        },
        "/api/departamentos/search": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "municipios"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "includes": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "relation": {
                                                    "type": "string",
                                                    "enum": [
                                                        "municipios"
                                                    ]
                                                },
                                                "filters": {
                                                    "type": "object",
                                                    "properties": null
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DepartamentoResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Search for departamentos",
                "tags": [
                    "Departamento"
                ]
            }
        },
        "/api/departamentos/{departamento}": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "departamento",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "municipios"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/DepartamentoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Get departamento",
                "tags": [
                    "Departamento"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "departamento",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "municipios"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Departamento"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/DepartamentoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Update departamento",
                "tags": [
                    "Departamento"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "departamento",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "force",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "municipios"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/DepartamentoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Delete departamento",
                "tags": [
                    "Departamento"
                ]
            }
        },
        "/api/departamentos/{departamento}/restore": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "departamento",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "municipios"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/DepartamentoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Restore departamento",
                "tags": [
                    "Departamento"
                ]
            }
        },
        "/api/roles": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "permissions",
                                "users"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/RoleResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Create role",
                "tags": [
                    "Role"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "permissions",
                                "users"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RoleResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get a list of roles",
                "tags": [
                    "Role Disabled Authorization"
                ]
            }
        },
        "/api/roles/search": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "permissions",
                                "users"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "includes": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "relation": {
                                                    "type": "string",
                                                    "enum": [
                                                        "permissions",
                                                        "users"
                                                    ]
                                                },
                                                "filters": {
                                                    "type": "object",
                                                    "properties": null
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RoleResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Search for roles",
                "tags": [
                    "Role"
                ]
            }
        },
        "/api/roles/{role}": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "role",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "permissions",
                                "users"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/RoleResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Get role",
                "tags": [
                    "Role"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "role",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "permissions",
                                "users"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/RoleResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Update role",
                "tags": [
                    "Role"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "role",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "permissions",
                                "users"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/RoleResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Delete role",
                "tags": [
                    "Role"
                ]
            }
        },
        "/api/roles/{role}/restore": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "role",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "permissions",
                                "users"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/RoleResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Restore role",
                "tags": [
                    "Role"
                ]
            }
        },
        "/api/permisos": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Permission"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PermissionResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Create permission",
                "tags": [
                    "Permission"
                ]
            },
            "get": {
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PermissionResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get a list of permissions",
                "tags": [
                    "Permission"
                ]
            }
        },
        "/api/permisos/search": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "filters": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "and",
                                                        "or"
                                                    ]
                                                },
                                                "field": {
                                                    "type": "string",
                                                    "enum": [
                                                        "id",
                                                        "name"
                                                    ]
                                                },
                                                "operator": {
                                                    "type": "string",
                                                    "enum": [
                                                        "<",
                                                        "<=",
                                                        ">",
                                                        ">=",
                                                        "=",
                                                        "!=",
                                                        "like",
                                                        "not like",
                                                        "ilike",
                                                        "not ilike",
                                                        "in",
                                                        "not in",
                                                        "all in",
                                                        "any in"
                                                    ]
                                                },
                                                "value": {
                                                    "type": "string"
                                                },
                                                "nested": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "and",
                                                                    "or"
                                                                ]
                                                            },
                                                            "field": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "id",
                                                                    "name"
                                                                ]
                                                            },
                                                            "operator": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "<",
                                                                    "<=",
                                                                    ">",
                                                                    ">=",
                                                                    "=",
                                                                    "!=",
                                                                    "like",
                                                                    "not like",
                                                                    "ilike",
                                                                    "not ilike",
                                                                    "in",
                                                                    "not in",
                                                                    "all in",
                                                                    "any in"
                                                                ]
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "sort": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "field": {
                                                    "type": "string",
                                                    "enum": [
                                                        "id",
                                                        "name"
                                                    ]
                                                },
                                                "direction": {
                                                    "type": "string",
                                                    "enum": [
                                                        "asc",
                                                        "desc"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "field"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PermissionResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Search for permissions",
                "tags": [
                    "Permission"
                ]
            }
        },
        "/api/permisos/{permiso}": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "permiso",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PermissionResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Get permission",
                "tags": [
                    "Permission"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "permiso",
                        "in": "path",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Permission"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PermissionResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Update permission",
                "tags": [
                    "Permission"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "permiso",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PermissionResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Delete permission",
                "tags": [
                    "Permission"
                ]
            }
        },
        "/api/permisos/{permiso}/restore": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "permiso",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PermissionResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Restore permission",
                "tags": [
                    "Permission"
                ]
            }
        },
        "/api/medios-desplazamiento": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MedioDesplazamiento"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/MedioDesplazamientoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Create medios desplazamiento",
                "tags": [
                    "Medio Desplazamiento"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MedioDesplazamientoResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get a list of medios desplazamiento",
                "tags": [
                    "Medio Desplazamiento"
                ]
            }
        },
        "/api/medios-desplazamiento/search": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MedioDesplazamientoResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Search for medios desplazamiento",
                "tags": [
                    "Medio Desplazamiento"
                ]
            }
        },
        "/api/medios-desplazamiento/{medios_desplazamiento}": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "medios_desplazamiento",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/MedioDesplazamientoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Get medios desplazamiento",
                "tags": [
                    "Medio Desplazamiento"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "medios_desplazamiento",
                        "in": "path",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MedioDesplazamiento"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/MedioDesplazamientoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Update medios desplazamiento",
                "tags": [
                    "Medio Desplazamiento"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "medios_desplazamiento",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/MedioDesplazamientoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Delete medios desplazamiento",
                "tags": [
                    "Medio Desplazamiento"
                ]
            }
        },
        "/api/medios-desplazamiento/{medios_desplazamiento}/restore": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "medios_desplazamiento",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/MedioDesplazamientoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Restore medios desplazamiento",
                "tags": [
                    "Medio Desplazamiento"
                ]
            }
        },
        "/api/incidentes": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Incidente"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/IncidenteResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Create incidente",
                "tags": [
                    "Incidente"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/IncidenteResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get a list of incidentes",
                "tags": [
                    "Incidente"
                ]
            }
        },
        "/api/incidentes/search": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/IncidenteResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Search for incidentes",
                "tags": [
                    "Incidente"
                ]
            }
        },
        "/api/incidentes/{incidente}": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "incidente",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/IncidenteResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Get incidente",
                "tags": [
                    "Incidente"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "incidente",
                        "in": "path",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Incidente"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/IncidenteResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Update incidente",
                "tags": [
                    "Incidente"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "incidente",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/IncidenteResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Delete incidente",
                "tags": [
                    "Incidente"
                ]
            }
        },
        "/api/incidentes/{incidente}/restore": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "incidente",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/IncidenteResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Restore incidente",
                "tags": [
                    "Incidente"
                ]
            }
        },
        "/api/marcadores": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Marcador"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/MarcadorResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Create marcadore",
                "tags": [
                    "Marcador"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MarcadorResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get a list of marcadores",
                "tags": [
                    "Marcador"
                ]
            }
        },
        "/api/marcadores/search": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MarcadorResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Search for marcadores",
                "tags": [
                    "Marcador"
                ]
            }
        },
        "/api/marcadores/{marcadore}": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "marcadore",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/MarcadorResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Get marcadore",
                "tags": [
                    "Marcador"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "marcadore",
                        "in": "path",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Marcador"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/MarcadorResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Update marcadore",
                "tags": [
                    "Marcador"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "marcadore",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/MarcadorResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Delete marcadore",
                "tags": [
                    "Marcador"
                ]
            }
        },
        "/api/marcadores/{marcadore}/restore": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "marcadore",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/MarcadorResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Restore marcadore",
                "tags": [
                    "Marcador"
                ]
            }
        },
        "/api/vehiculos": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Vehiculo"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/VehiculoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Create vehiculo",
                "tags": [
                    "Vehiculo"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/VehiculoResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get a list of vehiculos",
                "tags": [
                    "Vehiculo"
                ]
            }
        },
        "/api/vehiculos/search": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/VehiculoResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Search for vehiculos",
                "tags": [
                    "Vehiculo"
                ]
            }
        },
        "/api/vehiculos/{vehiculo}": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "vehiculo",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/VehiculoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Get vehiculo",
                "tags": [
                    "Vehiculo"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "vehiculo",
                        "in": "path",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Vehiculo"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/VehiculoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Update vehiculo",
                "tags": [
                    "Vehiculo"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "vehiculo",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/VehiculoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Delete vehiculo",
                "tags": [
                    "Vehiculo"
                ]
            }
        },
        "/api/vehiculos/{vehiculo}/restore": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "vehiculo",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/VehiculoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Restore vehiculo",
                "tags": [
                    "Vehiculo"
                ]
            }
        },
        "/api/vehiculos/batch": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "resources": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/Vehiculo"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/VehiculoResource"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Create a batch of vehiculos",
                "tags": [
                    "Vehiculo"
                ]
            }
        },
        "/api/estados-solicitud": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EstadoSolicitud"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/EstadoSolicitudResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Create estados solicitud",
                "tags": [
                    "Estado Solicitud"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EstadoSolicitudResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get a list of estados solicitud",
                "tags": [
                    "Estado Solicitud"
                ]
            }
        },
        "/api/estados-solicitud/search": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EstadoSolicitudResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Search for estados solicitud",
                "tags": [
                    "Estado Solicitud"
                ]
            }
        },
        "/api/estados-solicitud/{estados_solicitud}": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "estados_solicitud",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/EstadoSolicitudResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Get estados solicitud",
                "tags": [
                    "Estado Solicitud"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "estados_solicitud",
                        "in": "path",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EstadoSolicitud"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/EstadoSolicitudResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Update estados solicitud",
                "tags": [
                    "Estado Solicitud"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "estados_solicitud",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/EstadoSolicitudResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Delete estados solicitud",
                "tags": [
                    "Estado Solicitud"
                ]
            }
        },
        "/api/estados-solicitud/{estados_solicitud}/restore": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "estados_solicitud",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/EstadoSolicitudResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Restore estados solicitud",
                "tags": [
                    "Estado Solicitud"
                ]
            }
        },
        "/api/usuarios": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "solicitud.estado",
                                "solicitud",
                                "roles"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Create user",
                "tags": [
                    "Usuario"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "solicitud.estado",
                                "solicitud",
                                "roles"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get a list of users",
                "tags": [
                    "Usuario"
                ]
            }
        },
        "/api/usuarios/search": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "solicitud.estado",
                                "solicitud",
                                "roles"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "filters": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "and",
                                                        "or"
                                                    ]
                                                },
                                                "field": {
                                                    "type": "string",
                                                    "enum": [
                                                        "id",
                                                        "roles.id"
                                                    ]
                                                },
                                                "operator": {
                                                    "type": "string",
                                                    "enum": [
                                                        "<",
                                                        "<=",
                                                        ">",
                                                        ">=",
                                                        "=",
                                                        "!=",
                                                        "like",
                                                        "not like",
                                                        "ilike",
                                                        "not ilike",
                                                        "in",
                                                        "not in",
                                                        "all in",
                                                        "any in"
                                                    ]
                                                },
                                                "value": {
                                                    "type": "string"
                                                },
                                                "nested": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "and",
                                                                    "or"
                                                                ]
                                                            },
                                                            "field": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "id",
                                                                    "roles.id"
                                                                ]
                                                            },
                                                            "operator": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "<",
                                                                    "<=",
                                                                    ">",
                                                                    ">=",
                                                                    "=",
                                                                    "!=",
                                                                    "like",
                                                                    "not like",
                                                                    "ilike",
                                                                    "not ilike",
                                                                    "in",
                                                                    "not in",
                                                                    "all in",
                                                                    "any in"
                                                                ]
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "sort": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "field": {
                                                    "type": "string",
                                                    "enum": [
                                                        "id"
                                                    ]
                                                },
                                                "direction": {
                                                    "type": "string",
                                                    "enum": [
                                                        "asc",
                                                        "desc"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "field"
                                            ]
                                        }
                                    },
                                    "includes": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "relation": {
                                                    "type": "string",
                                                    "enum": [
                                                        "solicitud.estado",
                                                        "solicitud",
                                                        "roles"
                                                    ]
                                                },
                                                "filters": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "and",
                                                                        "or"
                                                                    ]
                                                                },
                                                                "field": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "id",
                                                                        "roles.id"
                                                                    ]
                                                                },
                                                                "operator": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "<",
                                                                        "<=",
                                                                        ">",
                                                                        ">=",
                                                                        "=",
                                                                        "!=",
                                                                        "like",
                                                                        "not like",
                                                                        "ilike",
                                                                        "not ilike",
                                                                        "in",
                                                                        "not in",
                                                                        "all in",
                                                                        "any in"
                                                                    ]
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                },
                                                                "nested": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "and",
                                                                                    "or"
                                                                                ]
                                                                            },
                                                                            "field": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "id",
                                                                                    "roles.id"
                                                                                ]
                                                                            },
                                                                            "operator": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "<",
                                                                                    "<=",
                                                                                    ">",
                                                                                    ">=",
                                                                                    "=",
                                                                                    "!=",
                                                                                    "like",
                                                                                    "not like",
                                                                                    "ilike",
                                                                                    "not ilike",
                                                                                    "in",
                                                                                    "not in",
                                                                                    "all in",
                                                                                    "any in"
                                                                                ]
                                                                            },
                                                                            "value": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Search for users",
                "tags": [
                    "Usuario"
                ]
            }
        },
        "/api/usuarios/{usuario}": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "usuario",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "solicitud.estado",
                                "solicitud",
                                "roles"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Get user",
                "tags": [
                    "Usuario"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "usuario",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "solicitud.estado",
                                "solicitud",
                                "roles"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Update user",
                "tags": [
                    "Usuario"
                ]
            }
        },
        "/api/solicitudes-cuentas": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SolicitudCuenta"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/SolicitudCuentaResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Create solicitudes cuenta",
                "tags": [
                    "Solicitud Cuenta"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SolicitudCuentaResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get a list of solicitudes cuentas",
                "tags": [
                    "Solicitud Cuenta"
                ]
            }
        },
        "/api/solicitudes-cuentas/search": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SolicitudCuentaResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Search for solicitudes cuentas",
                "tags": [
                    "Solicitud Cuenta"
                ]
            }
        },
        "/api/solicitudes-cuentas/{solicitudes_cuenta}": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "solicitudes_cuenta",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/SolicitudCuentaResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Get solicitudes cuenta",
                "tags": [
                    "Solicitud Cuenta"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "solicitudes_cuenta",
                        "in": "path",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SolicitudCuenta"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/SolicitudCuentaResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Update solicitudes cuenta",
                "tags": [
                    "Solicitud Cuenta"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "solicitudes_cuenta",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/SolicitudCuentaResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Delete solicitudes cuenta",
                "tags": [
                    "Solicitud Cuenta"
                ]
            }
        },
        "/api/solicitudes-cuentas/{solicitudes_cuenta}/restore": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "solicitudes_cuenta",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/SolicitudCuentaResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Restore solicitudes cuenta",
                "tags": [
                    "Solicitud Cuenta"
                ]
            }
        },
        "/api/desplazamientos": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "detalle_medios_desplazamiento",
                                "detalle_medios_desplazamiento.medio_desplazamiento"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DesplazamientoResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get a list of desplazamientos",
                "tags": [
                    "Desplazamiento"
                ]
            }
        },
        "/api/desplazamientos/search": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "detalle_medios_desplazamiento",
                                "detalle_medios_desplazamiento.medio_desplazamiento"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "filters": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "and",
                                                        "or"
                                                    ]
                                                },
                                                "field": {
                                                    "type": "string",
                                                    "enum": [
                                                        "fecha_creado"
                                                    ]
                                                },
                                                "operator": {
                                                    "type": "string",
                                                    "enum": [
                                                        "<",
                                                        "<=",
                                                        ">",
                                                        ">=",
                                                        "=",
                                                        "!=",
                                                        "like",
                                                        "not like",
                                                        "ilike",
                                                        "not ilike",
                                                        "in",
                                                        "not in",
                                                        "all in",
                                                        "any in"
                                                    ]
                                                },
                                                "value": {
                                                    "type": "string"
                                                },
                                                "nested": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "and",
                                                                    "or"
                                                                ]
                                                            },
                                                            "field": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "fecha_creado"
                                                                ]
                                                            },
                                                            "operator": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "<",
                                                                    "<=",
                                                                    ">",
                                                                    ">=",
                                                                    "=",
                                                                    "!=",
                                                                    "like",
                                                                    "not like",
                                                                    "ilike",
                                                                    "not ilike",
                                                                    "in",
                                                                    "not in",
                                                                    "all in",
                                                                    "any in"
                                                                ]
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "search": {
                                        "type": "object",
                                        "properties": {
                                            "value": {
                                                "type": "string",
                                                "description": "A search for the given value will be performed on the following fields: id"
                                            },
                                            "case_sensitive": {
                                                "type": "boolean",
                                                "description": "(default: true) Set it to false to perform search in case-insensitive way"
                                            }
                                        }
                                    },
                                    "sort": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "field": {
                                                    "type": "string",
                                                    "enum": [
                                                        "fecha_creado"
                                                    ]
                                                },
                                                "direction": {
                                                    "type": "string",
                                                    "enum": [
                                                        "asc",
                                                        "desc"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "field"
                                            ]
                                        }
                                    },
                                    "includes": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "relation": {
                                                    "type": "string",
                                                    "enum": [
                                                        "detalle_medios_desplazamiento",
                                                        "detalle_medios_desplazamiento.medio_desplazamiento"
                                                    ]
                                                },
                                                "filters": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "and",
                                                                        "or"
                                                                    ]
                                                                },
                                                                "field": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "fecha_creado"
                                                                    ]
                                                                },
                                                                "operator": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "<",
                                                                        "<=",
                                                                        ">",
                                                                        ">=",
                                                                        "=",
                                                                        "!=",
                                                                        "like",
                                                                        "not like",
                                                                        "ilike",
                                                                        "not ilike",
                                                                        "in",
                                                                        "not in",
                                                                        "all in",
                                                                        "any in"
                                                                    ]
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                },
                                                                "nested": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "and",
                                                                                    "or"
                                                                                ]
                                                                            },
                                                                            "field": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "fecha_creado"
                                                                                ]
                                                                            },
                                                                            "operator": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "<",
                                                                                    "<=",
                                                                                    ">",
                                                                                    ">=",
                                                                                    "=",
                                                                                    "!=",
                                                                                    "like",
                                                                                    "not like",
                                                                                    "ilike",
                                                                                    "not ilike",
                                                                                    "in",
                                                                                    "not in",
                                                                                    "all in",
                                                                                    "any in"
                                                                                ]
                                                                            },
                                                                            "value": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DesplazamientoResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Search for desplazamientos",
                "tags": [
                    "Desplazamiento"
                ]
            }
        },
        "/api/desplazamientos/{desplazamiento}": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "name": "desplazamiento",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "detalle_medios_desplazamiento",
                                "detalle_medios_desplazamiento.medio_desplazamiento"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/DesplazamientoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Get desplazamiento",
                "tags": [
                    "Desplazamiento"
                ]
            }
        },
        "/api/reporte-incidente": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReporteIncidente"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ReporteIncidenteResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Create reportes incidente",
                "tags": [
                    "Reporte Incidente"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ReporteIncidenteResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get a list of reportes incidentes",
                "tags": [
                    "Reporte Incidente"
                ]
            }
        },
        "/api/reporte-incidente/search": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ReporteIncidenteResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Search for reportes incidentes",
                "tags": [
                    "Reporte Incidente"
                ]
            }
        },
        "/api/reporte-incidente/{reporte_incidente}": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "reporte_incidente",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ReporteIncidenteResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Get reportes incidente",
                "tags": [
                    "Reporte Incidente"
                ]
            }
        },
        "/api/reporte-incidente/batch": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "resources": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/ReporteIncidente"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ReporteIncidenteResource"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Create a batch of reportes incidentes",
                "tags": [
                    "Reporte Incidente"
                ]
            }
        },
        "/api/detalle-medio-recorrido": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "medio_desplazamiento"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DetalleMedioRecorrido"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/DetalleMedioRecorridoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Create detalle medios recorrido",
                "tags": [
                    "Detalle Medio Recorrido"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "medio_desplazamiento"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DetalleMedioRecorridoResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get a list of detalle medios recorrido",
                "tags": [
                    "Detalle Medio Recorrido"
                ]
            }
        },
        "/api/detalle-medio-recorrido/search": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "medio_desplazamiento"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "includes": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "relation": {
                                                    "type": "string",
                                                    "enum": [
                                                        "medio_desplazamiento"
                                                    ]
                                                },
                                                "filters": {
                                                    "type": "object",
                                                    "properties": null
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DetalleMedioRecorridoResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Search for detalle medios recorrido",
                "tags": [
                    "Detalle Medio Recorrido"
                ]
            }
        },
        "/api/detalle-medio-recorrido/{detalle_medio_recorrido}": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "detalle_medio_recorrido",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "medio_desplazamiento"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/DetalleMedioRecorridoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Get detalle medios recorrido",
                "tags": [
                    "Detalle Medio Recorrido"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "detalle_medio_recorrido",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "medio_desplazamiento"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DetalleMedioRecorrido"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/DetalleMedioRecorridoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Update detalle medios recorrido",
                "tags": [
                    "Detalle Medio Recorrido"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "detalle_medio_recorrido",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "force",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "medio_desplazamiento"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/DetalleMedioRecorridoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Delete detalle medios recorrido",
                "tags": [
                    "Detalle Medio Recorrido"
                ]
            }
        },
        "/api/detalle-medio-recorrido/{detalle_medio_recorrido}/restore": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "detalle_medio_recorrido",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "medio_desplazamiento"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/DetalleMedioRecorridoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Restore detalle medios recorrido",
                "tags": [
                    "Detalle Medio Recorrido"
                ]
            }
        },
        "/api/tipos-vehiculos-rutas": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TiposVehiculosRutas"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TiposVehiculosRutasResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Create tipos vehiculos ruta",
                "tags": [
                    "Tipos Vehiculos Rutas"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TiposVehiculosRutasResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get a list of tipos vehiculos rutas",
                "tags": [
                    "Tipos Vehiculos Rutas"
                ]
            }
        },
        "/api/tipos-vehiculos-rutas/search": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TiposVehiculosRutasResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Search for tipos vehiculos rutas",
                "tags": [
                    "Tipos Vehiculos Rutas"
                ]
            }
        },
        "/api/tipos-vehiculos-rutas/{tipos_vehiculos_ruta}": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "tipos_vehiculos_ruta",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TiposVehiculosRutasResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Get tipos vehiculos ruta",
                "tags": [
                    "Tipos Vehiculos Rutas"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "tipos_vehiculos_ruta",
                        "in": "path",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TiposVehiculosRutas"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TiposVehiculosRutasResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Update tipos vehiculos ruta",
                "tags": [
                    "Tipos Vehiculos Rutas"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "tipos_vehiculos_ruta",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TiposVehiculosRutasResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Delete tipos vehiculos ruta",
                "tags": [
                    "Tipos Vehiculos Rutas"
                ]
            }
        },
        "/api/tipos-vehiculos-rutas/{tipos_vehiculos_ruta}/restore": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "tipos_vehiculos_ruta",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TiposVehiculosRutasResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Restore tipos vehiculos ruta",
                "tags": [
                    "Tipos Vehiculos Rutas"
                ]
            }
        },
        "/api/tipos-servicios-rutas": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TiposServiciosRutas"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TiposServiciosRutasResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Create tipos servicios ruta",
                "tags": [
                    "Tipos Servicios Rutas"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TiposServiciosRutasResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get a list of tipos servicios rutas",
                "tags": [
                    "Tipos Servicios Rutas"
                ]
            }
        },
        "/api/tipos-servicios-rutas/search": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TiposServiciosRutasResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Search for tipos servicios rutas",
                "tags": [
                    "Tipos Servicios Rutas"
                ]
            }
        },
        "/api/tipos-servicios-rutas/{tipos_servicios_ruta}": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "tipos_servicios_ruta",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TiposServiciosRutasResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Get tipos servicios ruta",
                "tags": [
                    "Tipos Servicios Rutas"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "tipos_servicios_ruta",
                        "in": "path",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TiposServiciosRutas"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TiposServiciosRutasResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Update tipos servicios ruta",
                "tags": [
                    "Tipos Servicios Rutas"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "tipos_servicios_ruta",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TiposServiciosRutasResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Delete tipos servicios ruta",
                "tags": [
                    "Tipos Servicios Rutas"
                ]
            }
        },
        "/api/tipos-servicios-rutas/{tipos_servicios_ruta}/restore": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "tipos_servicios_ruta",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TiposServiciosRutasResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Restore tipos servicios ruta",
                "tags": [
                    "Tipos Servicios Rutas"
                ]
            }
        },
        "/api/clases-servicios-rutas": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClasesServiciosRutas"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ClasesServiciosRutasResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Create clases servicios ruta",
                "tags": [
                    "Clases Servicios Rutas"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ClasesServiciosRutasResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get a list of clases servicios rutas",
                "tags": [
                    "Clases Servicios Rutas"
                ]
            }
        },
        "/api/clases-servicios-rutas/search": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ClasesServiciosRutasResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Search for clases servicios rutas",
                "tags": [
                    "Clases Servicios Rutas"
                ]
            }
        },
        "/api/clases-servicios-rutas/{clases_servicios_ruta}": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "clases_servicios_ruta",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ClasesServiciosRutasResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Get clases servicios ruta",
                "tags": [
                    "Clases Servicios Rutas"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "clases_servicios_ruta",
                        "in": "path",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClasesServiciosRutas"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ClasesServiciosRutasResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Update clases servicios ruta",
                "tags": [
                    "Clases Servicios Rutas"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "clases_servicios_ruta",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ClasesServiciosRutasResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Delete clases servicios ruta",
                "tags": [
                    "Clases Servicios Rutas"
                ]
            }
        },
        "/api/clases-servicios-rutas/{clases_servicios_ruta}/restore": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "clases_servicios_ruta",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ClasesServiciosRutasResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Restore clases servicios ruta",
                "tags": [
                    "Clases Servicios Rutas"
                ]
            }
        },
        "/api/rutas-transporte": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "departamento",
                                "vehiculo",
                                "servicio",
                                "clase"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RutasTransporte"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/RutasTransporteResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Create rutas transporte",
                "tags": [
                    "Rutas Transporte"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "departamento",
                                "vehiculo",
                                "servicio",
                                "clase"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RutasTransporteResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get a list of rutas transportes",
                "tags": [
                    "Rutas Transporte"
                ]
            }
        },
        "/api/rutas-transporte/search": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "departamento",
                                "vehiculo",
                                "servicio",
                                "clase"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "filters": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "and",
                                                        "or"
                                                    ]
                                                },
                                                "field": {
                                                    "type": "string",
                                                    "enum": [
                                                        "codigo_ruta",
                                                        "ruta",
                                                        "departamento.id"
                                                    ]
                                                },
                                                "operator": {
                                                    "type": "string",
                                                    "enum": [
                                                        "<",
                                                        "<=",
                                                        ">",
                                                        ">=",
                                                        "=",
                                                        "!=",
                                                        "like",
                                                        "not like",
                                                        "ilike",
                                                        "not ilike",
                                                        "in",
                                                        "not in",
                                                        "all in",
                                                        "any in"
                                                    ]
                                                },
                                                "value": {
                                                    "type": "string"
                                                },
                                                "nested": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "and",
                                                                    "or"
                                                                ]
                                                            },
                                                            "field": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "codigo_ruta",
                                                                    "ruta",
                                                                    "departamento.id"
                                                                ]
                                                            },
                                                            "operator": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "<",
                                                                    "<=",
                                                                    ">",
                                                                    ">=",
                                                                    "=",
                                                                    "!=",
                                                                    "like",
                                                                    "not like",
                                                                    "ilike",
                                                                    "not ilike",
                                                                    "in",
                                                                    "not in",
                                                                    "all in",
                                                                    "any in"
                                                                ]
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "search": {
                                        "type": "object",
                                        "properties": {
                                            "value": {
                                                "type": "string",
                                                "description": "A search for the given value will be performed on the following fields: codigo_ruta, ruta, departamento.nombre, departamento.capital"
                                            },
                                            "case_sensitive": {
                                                "type": "boolean",
                                                "description": "(default: true) Set it to false to perform search in case-insensitive way"
                                            }
                                        }
                                    },
                                    "includes": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "relation": {
                                                    "type": "string",
                                                    "enum": [
                                                        "departamento",
                                                        "vehiculo",
                                                        "servicio",
                                                        "clase"
                                                    ]
                                                },
                                                "filters": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "and",
                                                                        "or"
                                                                    ]
                                                                },
                                                                "field": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "codigo_ruta",
                                                                        "ruta",
                                                                        "departamento.id"
                                                                    ]
                                                                },
                                                                "operator": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "<",
                                                                        "<=",
                                                                        ">",
                                                                        ">=",
                                                                        "=",
                                                                        "!=",
                                                                        "like",
                                                                        "not like",
                                                                        "ilike",
                                                                        "not ilike",
                                                                        "in",
                                                                        "not in",
                                                                        "all in",
                                                                        "any in"
                                                                    ]
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                },
                                                                "nested": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "and",
                                                                                    "or"
                                                                                ]
                                                                            },
                                                                            "field": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "codigo_ruta",
                                                                                    "ruta",
                                                                                    "departamento.id"
                                                                                ]
                                                                            },
                                                                            "operator": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "<",
                                                                                    "<=",
                                                                                    ">",
                                                                                    ">=",
                                                                                    "=",
                                                                                    "!=",
                                                                                    "like",
                                                                                    "not like",
                                                                                    "ilike",
                                                                                    "not ilike",
                                                                                    "in",
                                                                                    "not in",
                                                                                    "all in",
                                                                                    "any in"
                                                                                ]
                                                                            },
                                                                            "value": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RutasTransporteResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Search for rutas transportes",
                "tags": [
                    "Rutas Transporte"
                ]
            }
        },
        "/api/rutas-transporte/{rutas_transporte}": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "rutas_transporte",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "departamento",
                                "vehiculo",
                                "servicio",
                                "clase"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/RutasTransporteResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Get rutas transporte",
                "tags": [
                    "Rutas Transporte"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "rutas_transporte",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "departamento",
                                "vehiculo",
                                "servicio",
                                "clase"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RutasTransporte"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/RutasTransporteResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Update rutas transporte",
                "tags": [
                    "Rutas Transporte"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "rutas_transporte",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "force",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "departamento",
                                "vehiculo",
                                "servicio",
                                "clase"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/RutasTransporteResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Delete rutas transporte",
                "tags": [
                    "Rutas Transporte"
                ]
            }
        },
        "/api/rutas-transporte/{rutas_transporte}/restore": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "rutas_transporte",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "departamento",
                                "vehiculo",
                                "servicio",
                                "clase"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/RutasTransporteResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Restore rutas transporte",
                "tags": [
                    "Rutas Transporte"
                ]
            }
        },
        "/api/levantamientos": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "usuario"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Levantamiento"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LevantamientoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Create levantamiento",
                "tags": [
                    "Levantamiento"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "usuario"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LevantamientoResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get a list of levantamientos",
                "tags": [
                    "Levantamiento"
                ]
            }
        },
        "/api/levantamientos/search": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "usuario"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "filters": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "and",
                                                        "or"
                                                    ]
                                                },
                                                "field": {
                                                    "type": "string",
                                                    "enum": [
                                                        "codigo",
                                                        "fecha_vencimiento"
                                                    ]
                                                },
                                                "operator": {
                                                    "type": "string",
                                                    "enum": [
                                                        "<",
                                                        "<=",
                                                        ">",
                                                        ">=",
                                                        "=",
                                                        "!=",
                                                        "like",
                                                        "not like",
                                                        "ilike",
                                                        "not ilike",
                                                        "in",
                                                        "not in",
                                                        "all in",
                                                        "any in"
                                                    ]
                                                },
                                                "value": {
                                                    "type": "string"
                                                },
                                                "nested": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "and",
                                                                    "or"
                                                                ]
                                                            },
                                                            "field": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "codigo",
                                                                    "fecha_vencimiento"
                                                                ]
                                                            },
                                                            "operator": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "<",
                                                                    "<=",
                                                                    ">",
                                                                    ">=",
                                                                    "=",
                                                                    "!=",
                                                                    "like",
                                                                    "not like",
                                                                    "ilike",
                                                                    "not ilike",
                                                                    "in",
                                                                    "not in",
                                                                    "all in",
                                                                    "any in"
                                                                ]
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "search": {
                                        "type": "object",
                                        "properties": {
                                            "value": {
                                                "type": "string",
                                                "description": "A search for the given value will be performed on the following fields: codigo"
                                            },
                                            "case_sensitive": {
                                                "type": "boolean",
                                                "description": "(default: true) Set it to false to perform search in case-insensitive way"
                                            }
                                        }
                                    },
                                    "sort": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "field": {
                                                    "type": "string",
                                                    "enum": [
                                                        "codigo",
                                                        "fecha_vencimiento",
                                                        "id"
                                                    ]
                                                },
                                                "direction": {
                                                    "type": "string",
                                                    "enum": [
                                                        "asc",
                                                        "desc"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "field"
                                            ]
                                        }
                                    },
                                    "includes": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "relation": {
                                                    "type": "string",
                                                    "enum": [
                                                        "usuario"
                                                    ]
                                                },
                                                "filters": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "and",
                                                                        "or"
                                                                    ]
                                                                },
                                                                "field": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "codigo",
                                                                        "fecha_vencimiento"
                                                                    ]
                                                                },
                                                                "operator": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "<",
                                                                        "<=",
                                                                        ">",
                                                                        ">=",
                                                                        "=",
                                                                        "!=",
                                                                        "like",
                                                                        "not like",
                                                                        "ilike",
                                                                        "not ilike",
                                                                        "in",
                                                                        "not in",
                                                                        "all in",
                                                                        "any in"
                                                                    ]
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                },
                                                                "nested": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "and",
                                                                                    "or"
                                                                                ]
                                                                            },
                                                                            "field": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "codigo",
                                                                                    "fecha_vencimiento"
                                                                                ]
                                                                            },
                                                                            "operator": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "<",
                                                                                    "<=",
                                                                                    ">",
                                                                                    ">=",
                                                                                    "=",
                                                                                    "!=",
                                                                                    "like",
                                                                                    "not like",
                                                                                    "ilike",
                                                                                    "not ilike",
                                                                                    "in",
                                                                                    "not in",
                                                                                    "all in",
                                                                                    "any in"
                                                                                ]
                                                                            },
                                                                            "value": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LevantamientoResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Search for levantamientos",
                "tags": [
                    "Levantamiento"
                ]
            }
        },
        "/api/levantamientos/{levantamiento}": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "levantamiento",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "usuario"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LevantamientoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Get levantamiento",
                "tags": [
                    "Levantamiento"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "levantamiento",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "usuario"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Levantamiento"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LevantamientoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Update levantamiento",
                "tags": [
                    "Levantamiento"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "levantamiento",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "force",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "usuario"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LevantamientoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Delete levantamiento",
                "tags": [
                    "Levantamiento"
                ]
            }
        },
        "/api/levantamientos/{levantamiento}/restore": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "levantamiento",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "usuario"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LevantamientoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Restore levantamiento",
                "tags": [
                    "Levantamiento"
                ]
            }
        },
        "/api/reporte-marcadores": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "levantamiento"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReporteMarcadores"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ReporteMarcadoresResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Create reporte marcadore",
                "tags": [
                    "Reporte Marcadores"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "levantamiento"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ReporteMarcadoresResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get a list of reporte marcadores",
                "tags": [
                    "Reporte Marcadores"
                ]
            }
        },
        "/api/reporte-marcadores/search": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "levantamiento"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "filters": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "and",
                                                        "or"
                                                    ]
                                                },
                                                "field": {
                                                    "type": "string",
                                                    "enum": [
                                                        "levantamiento.codigo"
                                                    ]
                                                },
                                                "operator": {
                                                    "type": "string",
                                                    "enum": [
                                                        "<",
                                                        "<=",
                                                        ">",
                                                        ">=",
                                                        "=",
                                                        "!=",
                                                        "like",
                                                        "not like",
                                                        "ilike",
                                                        "not ilike",
                                                        "in",
                                                        "not in",
                                                        "all in",
                                                        "any in"
                                                    ]
                                                },
                                                "value": {
                                                    "type": "string"
                                                },
                                                "nested": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "and",
                                                                    "or"
                                                                ]
                                                            },
                                                            "field": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "levantamiento.codigo"
                                                                ]
                                                            },
                                                            "operator": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "<",
                                                                    "<=",
                                                                    ">",
                                                                    ">=",
                                                                    "=",
                                                                    "!=",
                                                                    "like",
                                                                    "not like",
                                                                    "ilike",
                                                                    "not ilike",
                                                                    "in",
                                                                    "not in",
                                                                    "all in",
                                                                    "any in"
                                                                ]
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "includes": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "relation": {
                                                    "type": "string",
                                                    "enum": [
                                                        "levantamiento"
                                                    ]
                                                },
                                                "filters": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "and",
                                                                        "or"
                                                                    ]
                                                                },
                                                                "field": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "levantamiento.codigo"
                                                                    ]
                                                                },
                                                                "operator": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "<",
                                                                        "<=",
                                                                        ">",
                                                                        ">=",
                                                                        "=",
                                                                        "!=",
                                                                        "like",
                                                                        "not like",
                                                                        "ilike",
                                                                        "not ilike",
                                                                        "in",
                                                                        "not in",
                                                                        "all in",
                                                                        "any in"
                                                                    ]
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                },
                                                                "nested": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "and",
                                                                                    "or"
                                                                                ]
                                                                            },
                                                                            "field": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "levantamiento.codigo"
                                                                                ]
                                                                            },
                                                                            "operator": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "<",
                                                                                    "<=",
                                                                                    ">",
                                                                                    ">=",
                                                                                    "=",
                                                                                    "!=",
                                                                                    "like",
                                                                                    "not like",
                                                                                    "ilike",
                                                                                    "not ilike",
                                                                                    "in",
                                                                                    "not in",
                                                                                    "all in",
                                                                                    "any in"
                                                                                ]
                                                                            },
                                                                            "value": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ReporteMarcadoresResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Search for reporte marcadores",
                "tags": [
                    "Reporte Marcadores"
                ]
            }
        },
        "/api/reporte-marcadores/{reporte_marcadore}": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "reporte_marcadore",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "levantamiento"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ReporteMarcadoresResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Get reporte marcadore",
                "tags": [
                    "Reporte Marcadores"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "reporte_marcadore",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "levantamiento"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReporteMarcadores"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ReporteMarcadoresResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Update reporte marcadore",
                "tags": [
                    "Reporte Marcadores"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "reporte_marcadore",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "force",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "levantamiento"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ReporteMarcadoresResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Delete reporte marcadore",
                "tags": [
                    "Reporte Marcadores"
                ]
            }
        },
        "/api/reporte-marcadores/{reporte_marcadore}/restore": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "reporte_marcadore",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "levantamiento"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ReporteMarcadoresResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Restore reporte marcadore",
                "tags": [
                    "Reporte Marcadores"
                ]
            }
        },
        "/api/reporte-marcadores/batch": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "levantamiento"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "resources": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/ReporteMarcadores"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ReporteMarcadoresResource"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Create a batch of reporte marcadores",
                "tags": [
                    "Reporte Marcadores"
                ]
            }
        },
        "/api/bitacora-tablas": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BitacoraTablaResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get a list of bitacora tablas",
                "tags": [
                    "Bitacora Tabla"
                ]
            }
        },
        "/api/bitacora-tablas/search": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "sort": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "field": {
                                                    "type": "string",
                                                    "enum": [
                                                        "id"
                                                    ]
                                                },
                                                "direction": {
                                                    "type": "string",
                                                    "enum": [
                                                        "asc",
                                                        "desc"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "field"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BitacoraTablaResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Search for bitacora tablas",
                "tags": [
                    "Bitacora Tabla"
                ]
            }
        },
        "/api/bitacora-tablas/{bitacora_tabla}": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "bitacora_tabla",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/BitacoraTablaResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Get bitacora tabla",
                "tags": [
                    "Bitacora Tabla"
                ]
            }
        },
        "/api/conteo-vehicular": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "usuario"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LevantamientoContador"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LevantamientoContadorResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Create levantamiento contador",
                "tags": [
                    "Levantamiento Contador"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "usuario"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LevantamientoContadorResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get a list of levantamiento contador",
                "tags": [
                    "Levantamiento Contador"
                ]
            }
        },
        "/api/conteo-vehicular/search": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "usuario"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "filters": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "and",
                                                        "or"
                                                    ]
                                                },
                                                "field": {
                                                    "type": "string",
                                                    "enum": [
                                                        "nombre_via"
                                                    ]
                                                },
                                                "operator": {
                                                    "type": "string",
                                                    "enum": [
                                                        "<",
                                                        "<=",
                                                        ">",
                                                        ">=",
                                                        "=",
                                                        "!=",
                                                        "like",
                                                        "not like",
                                                        "ilike",
                                                        "not ilike",
                                                        "in",
                                                        "not in",
                                                        "all in",
                                                        "any in"
                                                    ]
                                                },
                                                "value": {
                                                    "type": "string"
                                                },
                                                "nested": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "and",
                                                                    "or"
                                                                ]
                                                            },
                                                            "field": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "nombre_via"
                                                                ]
                                                            },
                                                            "operator": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "<",
                                                                    "<=",
                                                                    ">",
                                                                    ">=",
                                                                    "=",
                                                                    "!=",
                                                                    "like",
                                                                    "not like",
                                                                    "ilike",
                                                                    "not ilike",
                                                                    "in",
                                                                    "not in",
                                                                    "all in",
                                                                    "any in"
                                                                ]
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "search": {
                                        "type": "object",
                                        "properties": {
                                            "value": {
                                                "type": "string",
                                                "description": "A search for the given value will be performed on the following fields: nombre_via, codigo"
                                            },
                                            "case_sensitive": {
                                                "type": "boolean",
                                                "description": "(default: true) Set it to false to perform search in case-insensitive way"
                                            }
                                        }
                                    },
                                    "includes": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "relation": {
                                                    "type": "string",
                                                    "enum": [
                                                        "usuario"
                                                    ]
                                                },
                                                "filters": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "and",
                                                                        "or"
                                                                    ]
                                                                },
                                                                "field": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "nombre_via"
                                                                    ]
                                                                },
                                                                "operator": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "<",
                                                                        "<=",
                                                                        ">",
                                                                        ">=",
                                                                        "=",
                                                                        "!=",
                                                                        "like",
                                                                        "not like",
                                                                        "ilike",
                                                                        "not ilike",
                                                                        "in",
                                                                        "not in",
                                                                        "all in",
                                                                        "any in"
                                                                    ]
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                },
                                                                "nested": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "and",
                                                                                    "or"
                                                                                ]
                                                                            },
                                                                            "field": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "nombre_via"
                                                                                ]
                                                                            },
                                                                            "operator": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "<",
                                                                                    "<=",
                                                                                    ">",
                                                                                    ">=",
                                                                                    "=",
                                                                                    "!=",
                                                                                    "like",
                                                                                    "not like",
                                                                                    "ilike",
                                                                                    "not ilike",
                                                                                    "in",
                                                                                    "not in",
                                                                                    "all in",
                                                                                    "any in"
                                                                                ]
                                                                            },
                                                                            "value": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LevantamientoContadorResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Search for levantamiento contador",
                "tags": [
                    "Levantamiento Contador"
                ]
            }
        },
        "/api/conteo-vehicular/{conteo_vehicular}": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "conteo_vehicular",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "usuario"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LevantamientoContadorResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Get levantamiento contador",
                "tags": [
                    "Levantamiento Contador"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "conteo_vehicular",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "usuario"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LevantamientoContador"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LevantamientoContadorResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Update levantamiento contador",
                "tags": [
                    "Levantamiento Contador"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "conteo_vehicular",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "force",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "usuario"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LevantamientoContadorResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Delete levantamiento contador",
                "tags": [
                    "Levantamiento Contador"
                ]
            }
        },
        "/api/conteo-vehicular/{conteo_vehicular}/restore": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "conteo_vehicular",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "usuario"
                            ]
                        },
                        "name": "include",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LevantamientoContadorResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Restore levantamiento contador",
                "tags": [
                    "Levantamiento Contador"
                ]
            }
        },
        "/api/reporte-contador": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReporteContador"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ReporteContadorResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Create reporte contador",
                "tags": [
                    "Reporte Contador"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ReporteContadorResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get a list of reporte contador",
                "tags": [
                    "Reporte Contador"
                ]
            }
        },
        "/api/reporte-contador/search": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ReporteContadorResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Search for reporte contador",
                "tags": [
                    "Reporte Contador"
                ]
            }
        },
        "/api/reporte-contador/{reporte_contador}": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "reporte_contador",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ReporteContadorResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Get reporte contador",
                "tags": [
                    "Reporte Contador"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "reporte_contador",
                        "in": "path",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReporteContador"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ReporteContadorResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Update reporte contador",
                "tags": [
                    "Reporte Contador"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "reporte_contador",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ReporteContadorResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Delete reporte contador",
                "tags": [
                    "Reporte Contador"
                ]
            }
        },
        "/api/reporte-contador/{reporte_contador}/restore": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "reporte_contador",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ReporteContadorResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Restore reporte contador",
                "tags": [
                    "Reporte Contador"
                ]
            }
        },
        "/api/reporte-contador/batch": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "resources": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/ReporteContador"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ReporteContadorResource"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Create a batch of reporte contador",
                "tags": [
                    "Reporte Contador"
                ]
            }
        },
        "/api/terminos-condiciones": {
            "post": {
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TerminosCondiciones"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TerminosCondicionesResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Create terminos condicione",
                "tags": [
                    "Terminos Condiciones"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TerminosCondicionesResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get a list of terminos condiciones",
                "tags": [
                    "Terminos Condiciones"
                ]
            }
        },
        "/api/terminos-condiciones/search": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TerminosCondicionesResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Search for terminos condiciones",
                "tags": [
                    "Terminos Condiciones"
                ]
            }
        },
        "/api/terminos-condiciones/{terminos_condicione}": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "terminos_condicione",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TerminosCondicionesResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Get terminos condicione",
                "tags": [
                    "Terminos Condiciones"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "terminos_condicione",
                        "in": "path",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TerminosCondiciones"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TerminosCondicionesResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Update terminos condicione",
                "tags": [
                    "Terminos Condiciones"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "terminos_condicione",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TerminosCondicionesResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Delete terminos condicione",
                "tags": [
                    "Terminos Condiciones"
                ]
            }
        },
        "/api/terminos-condiciones/{terminos_condicione}/restore": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "terminos_condicione",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TerminosCondicionesResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Restore terminos condicione",
                "tags": [
                    "Terminos Condiciones"
                ]
            }
        },
        "/api/levantamiento/{levantamiento}/agrupacion": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "levantamiento",
                        "in": "path",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AgrupacionLevantamiento"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AgrupacionLevantamientoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Create agrupacion levantamiento",
                "tags": [
                    "Agrupacion Levantamiento"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "levantamiento",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AgrupacionLevantamientoResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get a list of agrupacion levantamiento",
                "tags": [
                    "Agrupacion Levantamiento"
                ]
            }
        },
        "/api/levantamiento/{levantamiento}/agrupacion/search": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "levantamiento",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AgrupacionLevantamientoResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Search for agrupacion levantamiento",
                "tags": [
                    "Agrupacion Levantamiento"
                ]
            }
        },
        "/api/levantamiento/{levantamiento}/agrupacion/{agrupacion}": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "levantamiento",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "agrupacion",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AgrupacionLevantamientoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Get agrupacion levantamiento",
                "tags": [
                    "Agrupacion Levantamiento"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "levantamiento",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "agrupacion",
                        "in": "path",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AgrupacionLevantamiento"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AgrupacionLevantamientoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Update agrupacion levantamiento",
                "tags": [
                    "Agrupacion Levantamiento"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "levantamiento",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "agrupacion",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AgrupacionLevantamientoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Delete agrupacion levantamiento",
                "tags": [
                    "Agrupacion Levantamiento"
                ]
            }
        },
        "/api/levantamiento/{levantamiento}/agrupacion/{agrupacion}/restore": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "levantamiento",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "agrupacion",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AgrupacionLevantamientoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Restore agrupacion levantamiento",
                "tags": [
                    "Agrupacion Levantamiento"
                ]
            }
        },
        "/api/levantamiento/{levantamiento}/agrupacion/batch": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "levantamiento",
                        "in": "path",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "resources": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/AgrupacionLevantamiento"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AgrupacionLevantamientoResource"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Create a batch of agrupacion levantamiento",
                "tags": [
                    "Agrupacion Levantamiento"
                ]
            }
        },
        "/api/levantamiento-contador/{levantamiento_contador}/agrupacion": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "levantamiento_contador",
                        "in": "path",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AgrupacionLevantamiento"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AgrupacionLevantamientoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Create agrupacion levantamiento",
                "tags": [
                    "Agrupacion Levantamiento Contador"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "levantamiento_contador",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AgrupacionLevantamientoResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get a list of agrupacion levantamiento",
                "tags": [
                    "Agrupacion Levantamiento Contador"
                ]
            }
        },
        "/api/levantamiento-contador/{levantamiento_contador}/agrupacion/search": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "levantamiento_contador",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AgrupacionLevantamientoResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/ResourceLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/ResourceMeta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Search for agrupacion levantamiento",
                "tags": [
                    "Agrupacion Levantamiento Contador"
                ]
            }
        },
        "/api/levantamiento-contador/{levantamiento_contador}/agrupacion/{agrupacion}": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "levantamiento_contador",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "agrupacion",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "with_trashed",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "only_trashed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AgrupacionLevantamientoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Get agrupacion levantamiento",
                "tags": [
                    "Agrupacion Levantamiento Contador"
                ]
            },
            "patch": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "levantamiento_contador",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "agrupacion",
                        "in": "path",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AgrupacionLevantamiento"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AgrupacionLevantamientoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "summary": "Update agrupacion levantamiento",
                "tags": [
                    "Agrupacion Levantamiento Contador"
                ]
            },
            "delete": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "levantamiento_contador",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "agrupacion",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "boolean"
                        },
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AgrupacionLevantamientoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Delete agrupacion levantamiento",
                "tags": [
                    "Agrupacion Levantamiento Contador"
                ]
            }
        },
        "/api/levantamiento-contador/{levantamiento_contador}/agrupacion/{agrupacion}/restore": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "levantamiento_contador",
                        "in": "path",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "agrupacion",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AgrupacionLevantamientoResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Restore agrupacion levantamiento",
                "tags": [
                    "Agrupacion Levantamiento Contador"
                ]
            }
        },
        "/api/levantamiento-contador/{levantamiento_contador}/agrupacion/batch": {
            "post": {
                "parameters": [
                    {
                        "schema": {
                            "type": "integer"
                        },
                        "name": "levantamiento_contador",
                        "in": "path",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "resources": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/AgrupacionLevantamiento"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AgrupacionLevantamientoResource"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Create a batch of agrupacion levantamiento",
                "tags": [
                    "Agrupacion Levantamiento Contador"
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        },
        "schemas": {
            "Departamento": {
                "title": "Departamento",
                "type": "object",
                "properties": []
            },
            "DepartamentoResource": {
                "title": "DepartamentoResource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Departamento"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "id_zona": {
                                "type": "integer"
                            },
                            "nombre": {
                                "type": "string"
                            },
                            "capital": {
                                "type": "string",
                                "nullable": true
                            },
                            "iso31662": {
                                "type": "string"
                            },
                            "fecha_creado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_actualizado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_eliminado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            }
                        }
                    }
                ]
            },
            "Role": {
                "title": "Role",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "guard_name": {
                        "type": "string"
                    }
                }
            },
            "RoleResource": {
                "title": "RoleResource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Role"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            }
                        }
                    }
                ]
            },
            "Permission": {
                "title": "Permission",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "guard_name": {
                        "type": "string"
                    }
                }
            },
            "PermissionResource": {
                "title": "PermissionResource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Permission"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            }
                        }
                    }
                ]
            },
            "MedioDesplazamiento": {
                "title": "MedioDesplazamiento",
                "type": "object",
                "properties": {
                    "nombre": {
                        "type": "string"
                    },
                    "icono": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "MedioDesplazamientoResource": {
                "title": "MedioDesplazamientoResource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/MedioDesplazamiento"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "fecha_creado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_actualizado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_eliminado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            }
                        }
                    }
                ]
            },
            "Incidente": {
                "title": "Incidente",
                "type": "object",
                "properties": {
                    "nombre": {
                        "type": "string"
                    },
                    "icono": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "IncidenteResource": {
                "title": "IncidenteResource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Incidente"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "fecha_creado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_actualizado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_eliminado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            }
                        }
                    }
                ]
            },
            "Marcador": {
                "title": "Marcador",
                "type": "object",
                "properties": {
                    "nombre": {
                        "type": "string"
                    },
                    "icono": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "MarcadorResource": {
                "title": "MarcadorResource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Marcador"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "fecha_creado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_actualizado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_eliminado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            }
                        }
                    }
                ]
            },
            "Vehiculo": {
                "title": "Vehiculo",
                "type": "object",
                "properties": {
                    "nombre": {
                        "type": "string"
                    },
                    "nomenclatura": {
                        "type": "string",
                        "nullable": true
                    },
                    "descripcion": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "VehiculoResource": {
                "title": "VehiculoResource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Vehiculo"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "fecha_creado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_actualizado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_eliminado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            }
                        }
                    }
                ]
            },
            "EstadoSolicitud": {
                "title": "EstadoSolicitud",
                "type": "object",
                "properties": {
                    "nombre": {
                        "type": "string"
                    },
                    "permitir_acceso": {
                        "type": "boolean"
                    }
                }
            },
            "EstadoSolicitudResource": {
                "title": "EstadoSolicitudResource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/EstadoSolicitud"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "fecha_creado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_actualizado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_eliminado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            }
                        }
                    }
                ]
            },
            "User": {
                "title": "User",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "UserResource": {
                "title": "UserResource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/User"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "email_verified_at": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "remember_token": {
                                "type": "string",
                                "nullable": true
                            },
                            "created_at": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            }
                        }
                    }
                ]
            },
            "SolicitudCuenta": {
                "title": "SolicitudCuenta",
                "type": "object",
                "properties": {
                    "id_usuario": {
                        "type": "integer"
                    },
                    "id_estado_solicitud": {
                        "type": "integer"
                    }
                }
            },
            "SolicitudCuentaResource": {
                "title": "SolicitudCuentaResource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/SolicitudCuenta"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "fecha_creado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_actualizado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_eliminado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            }
                        }
                    }
                ]
            },
            "Desplazamiento": {
                "title": "Desplazamiento",
                "type": "object",
                "properties": {
                    "id_usuario": {
                        "type": "integer",
                        "nullable": true
                    },
                    "distancia": {
                        "type": "number",
                        "nullable": true
                    },
                    "velocidad_max": {
                        "type": "number",
                        "nullable": true
                    },
                    "velocidad_media": {
                        "type": "number",
                        "nullable": true
                    },
                    "elevacion_min": {
                        "type": "number",
                        "nullable": true
                    },
                    "duracion": {
                        "type": "integer",
                        "nullable": true
                    },
                    "inicio_desplazamiento": {
                        "type": "string",
                        "nullable": true,
                        "format": "date-time"
                    },
                    "fin_desplazamiento": {
                        "type": "string",
                        "nullable": true,
                        "format": "date-time"
                    }
                }
            },
            "DesplazamientoResource": {
                "title": "DesplazamientoResource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Desplazamiento"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "elevacion_max": {
                                "type": "number",
                                "nullable": true
                            },
                            "fecha_creado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_actualizado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_eliminado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "costo": {
                                "type": "number",
                                "nullable": true
                            }
                        }
                    }
                ]
            },
            "ReporteIncidente": {
                "title": "ReporteIncidente",
                "type": "object",
                "properties": {
                    "id_incidente": {
                        "type": "integer"
                    },
                    "fecha_reporte": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "posicion": {
                        "type": "string"
                    },
                    "altitud": {
                        "type": "number",
                        "nullable": true
                    }
                }
            },
            "ReporteIncidenteResource": {
                "title": "ReporteIncidenteResource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ReporteIncidente"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "fecha_creado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_actualizado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_eliminado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            }
                        }
                    }
                ]
            },
            "DetalleMedioRecorrido": {
                "title": "DetalleMedioRecorrido",
                "type": "object",
                "properties": {
                    "ruta": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "DetalleMedioRecorridoResource": {
                "title": "DetalleMedioRecorridoResource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DetalleMedioRecorrido"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "desplazamiento_id": {
                                "type": "string"
                            },
                            "id_medio_desplazamiento": {
                                "type": "integer"
                            },
                            "duracion": {
                                "type": "string"
                            },
                            "fecha_creado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_actualizado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_eliminado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "costo": {
                                "type": "number",
                                "nullable": true
                            }
                        }
                    }
                ]
            },
            "TiposVehiculosRutas": {
                "title": "TiposVehiculosRutas",
                "type": "object",
                "properties": {
                    "tipo": {
                        "type": "string"
                    }
                }
            },
            "TiposVehiculosRutasResource": {
                "title": "TiposVehiculosRutasResource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/TiposVehiculosRutas"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "fecha_creado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_actualizado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_eliminado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            }
                        }
                    }
                ]
            },
            "TiposServiciosRutas": {
                "title": "TiposServiciosRutas",
                "type": "object",
                "properties": {
                    "subtipo": {
                        "type": "string"
                    }
                }
            },
            "TiposServiciosRutasResource": {
                "title": "TiposServiciosRutasResource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/TiposServiciosRutas"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "fecha_creado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_actualizado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_eliminado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            }
                        }
                    }
                ]
            },
            "ClasesServiciosRutas": {
                "title": "ClasesServiciosRutas",
                "type": "object",
                "properties": {
                    "clase": {
                        "type": "string"
                    }
                }
            },
            "ClasesServiciosRutasResource": {
                "title": "ClasesServiciosRutasResource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ClasesServiciosRutas"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "fecha_creado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_actualizado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_eliminado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            }
                        }
                    }
                ]
            },
            "RutasTransporte": {
                "title": "RutasTransporte",
                "type": "object",
                "properties": {
                    "id_departamento": {
                        "type": "integer"
                    },
                    "id_tipo_vehiculo_ruta": {
                        "type": "integer"
                    },
                    "id_tipo_servicio_ruta": {
                        "type": "integer"
                    },
                    "id_clase_servicio_ruta": {
                        "type": "integer"
                    },
                    "codigo_ruta": {
                        "type": "string"
                    },
                    "ruta": {
                        "type": "string"
                    },
                    "denominacion": {
                        "type": "string",
                        "nullable": true
                    },
                    "tarifa_autorizada": {
                        "type": "number",
                        "nullable": true
                    }
                }
            },
            "RutasTransporteResource": {
                "title": "RutasTransporteResource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RutasTransporte"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "fecha_creado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_actualizado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_eliminado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            }
                        }
                    }
                ]
            },
            "Levantamiento": {
                "title": "Levantamiento",
                "type": "object",
                "properties": {
                    "id_usuario": {
                        "type": "integer"
                    },
                    "codigo": {
                        "type": "string"
                    },
                    "fecha_vencimiento": {
                        "type": "string",
                        "nullable": true,
                        "format": "date"
                    }
                }
            },
            "LevantamientoResource": {
                "title": "LevantamientoResource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Levantamiento"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "fecha_creado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_actualizado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_eliminado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            }
                        }
                    }
                ]
            },
            "ReporteMarcadores": {
                "title": "ReporteMarcadores",
                "type": "object",
                "properties": {
                    "id_usuario": {
                        "type": "integer"
                    },
                    "id_levantamiento": {
                        "type": "integer"
                    },
                    "id_marcador": {
                        "type": "integer"
                    },
                    "posicion": {
                        "type": "string"
                    },
                    "altitud": {
                        "type": "number",
                        "nullable": true
                    },
                    "comentario": {
                        "type": "string",
                        "nullable": true
                    },
                    "fecha_reporte": {
                        "type": "string",
                        "nullable": true,
                        "format": "date-time"
                    }
                }
            },
            "ReporteMarcadoresResource": {
                "title": "ReporteMarcadoresResource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ReporteMarcadores"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "fecha_creado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_actualizado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_eliminado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            }
                        }
                    }
                ]
            },
            "BitacoraTabla": {
                "title": "BitacoraTabla",
                "type": "object",
                "properties": {
                    "nombre_tabla": {
                        "type": "string"
                    },
                    "actualizado": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "BitacoraTablaResource": {
                "title": "BitacoraTablaResource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BitacoraTabla"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "fecha_creado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_actualizado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_eliminado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            }
                        }
                    }
                ]
            },
            "LevantamientoContador": {
                "title": "LevantamientoContador",
                "type": "object",
                "properties": {
                    "id_usuario": {
                        "type": "integer"
                    },
                    "codigo": {
                        "type": "string"
                    },
                    "nombre_via": {
                        "type": "string"
                    },
                    "identificacion_via": {
                        "type": "string"
                    },
                    "categoria_via": {
                        "type": "string"
                    },
                    "numero_carriles": {
                        "type": "string"
                    },
                    "periodo_inicio": {
                        "type": "string",
                        "nullable": true,
                        "format": "date"
                    },
                    "periodo_fin": {
                        "type": "string",
                        "nullable": true,
                        "format": "date"
                    }
                }
            },
            "LevantamientoContadorResource": {
                "title": "LevantamientoContadorResource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/LevantamientoContador"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "fecha_creado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_actualizado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_eliminado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            }
                        }
                    }
                ]
            },
            "ReporteContador": {
                "title": "ReporteContador",
                "type": "object",
                "properties": {
                    "id_levantamiento_contador": {
                        "type": "integer"
                    },
                    "id_vehiculo": {
                        "type": "integer"
                    },
                    "registrado": {
                        "type": "string",
                        "nullable": true,
                        "format": "date-time"
                    }
                }
            },
            "ReporteContadorResource": {
                "title": "ReporteContadorResource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ReporteContador"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "fecha_creado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_actualizado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_eliminado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            }
                        }
                    }
                ]
            },
            "TerminosCondiciones": {
                "title": "TerminosCondiciones",
                "type": "object",
                "properties": {
                    "descripcion": {
                        "type": "string"
                    }
                }
            },
            "TerminosCondicionesResource": {
                "title": "TerminosCondicionesResource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/TerminosCondiciones"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "fecha_creado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_actualizado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_eliminado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            }
                        }
                    }
                ]
            },
            "AgrupacionLevantamiento": {
                "title": "AgrupacionLevantamiento",
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "levantamiento_type": {
                        "type": "string"
                    },
                    "levantamiento_id": {
                        "type": "integer"
                    }
                }
            },
            "AgrupacionLevantamientoResource": {
                "title": "AgrupacionLevantamientoResource",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AgrupacionLevantamiento"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "fecha_creado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_actualizado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            },
                            "fecha_eliminado": {
                                "type": "string",
                                "nullable": true,
                                "format": "date-time"
                            }
                        }
                    }
                ]
            },
            "ResourceLinks": {
                "title": "ResourceLinks",
                "type": "object",
                "properties": {
                    "first": {
                        "type": "string",
                        "format": "uri"
                    },
                    "last": {
                        "type": "string",
                        "format": "uri"
                    },
                    "prev": {
                        "type": "string",
                        "format": "uri"
                    },
                    "next": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            },
            "ResourceMeta": {
                "title": "ResourceMeta",
                "type": "object",
                "properties": {
                    "current_page": {
                        "type": "integer"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "path": {
                        "type": "string"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Departamento",
            "description": "API documentation for Departamento"
        },
        {
            "name": "Role",
            "description": "API documentation for Role"
        },
        {
            "name": "Role Disabled Authorization",
            "description": "API documentation for Role Disabled Authorization"
        },
        {
            "name": "Permission",
            "description": "API documentation for Permission"
        },
        {
            "name": "Medio Desplazamiento",
            "description": "API documentation for Medio Desplazamiento"
        },
        {
            "name": "Incidente",
            "description": "API documentation for Incidente"
        },
        {
            "name": "Marcador",
            "description": "API documentation for Marcador"
        },
        {
            "name": "Vehiculo",
            "description": "API documentation for Vehiculo"
        },
        {
            "name": "Estado Solicitud",
            "description": "API documentation for Estado Solicitud"
        },
        {
            "name": "Usuario",
            "description": "API documentation for Usuario"
        },
        {
            "name": "Solicitud Cuenta",
            "description": "API documentation for Solicitud Cuenta"
        },
        {
            "name": "Desplazamiento",
            "description": "API documentation for Desplazamiento"
        },
        {
            "name": "Reporte Incidente",
            "description": "API documentation for Reporte Incidente"
        },
        {
            "name": "Detalle Medio Recorrido",
            "description": "API documentation for Detalle Medio Recorrido"
        },
        {
            "name": "Tipos Vehiculos Rutas",
            "description": "API documentation for Tipos Vehiculos Rutas"
        },
        {
            "name": "Tipos Servicios Rutas",
            "description": "API documentation for Tipos Servicios Rutas"
        },
        {
            "name": "Clases Servicios Rutas",
            "description": "API documentation for Clases Servicios Rutas"
        },
        {
            "name": "Rutas Transporte",
            "description": "API documentation for Rutas Transporte"
        },
        {
            "name": "Levantamiento",
            "description": "API documentation for Levantamiento"
        },
        {
            "name": "Reporte Marcadores",
            "description": "API documentation for Reporte Marcadores"
        },
        {
            "name": "Bitacora Tabla",
            "description": "API documentation for Bitacora Tabla"
        },
        {
            "name": "Levantamiento Contador",
            "description": "API documentation for Levantamiento Contador"
        },
        {
            "name": "Reporte Contador",
            "description": "API documentation for Reporte Contador"
        },
        {
            "name": "Terminos Condiciones",
            "description": "API documentation for Terminos Condiciones"
        },
        {
            "name": "Agrupacion Levantamiento",
            "description": "API documentation for Agrupacion Levantamiento"
        },
        {
            "name": "Agrupacion Levantamiento Contador",
            "description": "API documentation for Agrupacion Levantamiento Contador"
        }
    ]
}
